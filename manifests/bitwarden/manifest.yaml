---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-iscsi-vaultwarden-data
  labels:
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: production
    app.kubernetes.io/part-of: vaultwarden
spec:
  storageClassName: "freenas-iscsi-manual-csi"
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  csi:
    driver: org.democratic-csi.node-manual
    readOnly: false
    fsType: xfs
    volumeHandle: pv-iscsi-vaultwarden-data
    volumeAttributes:
      portal: storage-server-lagg.lan.theautomation.nl:3260
      iqn: iqn.2005-10.org.freenas.ctl:vaultwarden-data
      lun: "0"
      node_attach_driver: iscsi
      provisioner_driver: node-manual

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-iscsi-vaultwarden-data
  namespace: tools
  labels:
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: production
    app.kubernetes.io/part-of: vaultwarden
spec:
  storageClassName: freenas-iscsi-manual-csi
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeName: pv-iscsi-vaultwarden-data

---
kind: SealedSecret
apiVersion: bitnami.com/v1alpha1
metadata:
  name: vaultwarden-secret-env
  namespace: tools
  labels:
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: production
    app.kubernetes.io/part-of: vaultwarden
spec:
  encryptedData:
    ADMIN_TOKEN: AgBpdtneiVG56/ZDqnSO5PJtIircqycCMg4meRdi341lVdHlF8sBca79TXmSAnC0VDmt1jdD5VsHrOle75j+cYY3KyQNu2gD9kcfGviQFZt3aK9+vMfQf0UFm5NND8ZnOM1i0XLhRuE6gaIOglpKE5UC5gL1VDEsxWmhtq/5b3yHTIfPtLGIDzvVSSOkIIffho88qqrUaD1hkACvHftqWqKWoOUXL71YSEzocLmlMui1JAedwzYmWVD87NT4HepokF4KcSsGoxLJgl0LfURc7xJbhBRU2YY8g6tN4G3XQKpSGmzP/sTbDVsMtdETFke5VkZ+DhQdmUgyYaA11nHkHpql8hmvMfthJ0g4276nQQGDmmRMVN+0nnhW4A+fEQdPZ9ksJAPeJNj+8trgB9tLOI2zTPU6QOEe+tbbZ/LQmaJ5ydGeEU9ktFFmODcooqaXXHdBZk298soyRD/Leb6kIy17mAytK+cV+anN4cJyfHSFUfBapkL4fGg2RbaQ607FTmKzOQRllf7JIYLpWNpp8aOhKdAWN+RZIkvHs0Fe1FFgELB3C5jyIf5wFCluL+ceNURuc60nq/7XsYUKiTtWsO4xM9k8vemnxd7MTOAO/jjNYNFjpZnrmp0vpd2zey9+OB3BSok4m91Y2guMqolp6Ldddq3v77i8nIvRyt/t0pNhRI9Jxv/v5kZ0fyhBiDG9Avy8Ht0wvr0nWBOPZQ5RicTRLenl1fh4qrBfPjhBDUrf/omc4iHX+YizB8gJudvliVXSV1jiLYbXfg2H3eFwrqFX3HA1L7DHD5o5hxyL0cG52t1J421KL9eXsNwjPWKXyn9+DQqMUhAUBOq8cMBRdA/qLfJ1nH4I
    SMTP_FROM: AgDD8cvY45rJfpjNQMWrndQDr4keP3nf8pqWkTOgRAkmqHJHgM3qBdeeNYuPRrPolCHNoQXRxJiqBNVRPNtIUHe2Vrtj0UMYdcc4MNH0lVXNUqPJL2hUApW5PDakEB8qeXReXhod0IWtoCHbk8WsuTPU+LYLF92DERtynHWkwNmYR+NEFh8YKxhnpqIgkCNfQzQr8LsrCTkUYxlOlS7CsRrwKJpW2NrqwFPXkwIyWYOe9cxECXOSwk05wmfiIDA9sHM4ggHrV2AOv0aepElqKIjsHs2ZWFDuUzcmYDyKHZ5qGhcjr2INj3hI3iA3Eg6DaVYya/jsJ4zOnQ8+0tWS+1qY2BxvG7VmIuRTM+QAOZb4FEA6UOa3UphcM6a82rRiUgv8xLFHP52rk2XPA79fzbvdLAh0jYUoGEqsV/NUx5Vzk1ddEvAuo+Tg8xPWQQe/l89PN6w50ILbuPc+HUmmeFMBXtA1cPoA7Ex0lZQKN2MhzZytUwE7LGCrvo/Dim6Nro79QK27DokvtYEKgtLRtYFqigMO+ud5znASmVUDw+6VBeENSEKGRpmhQzoH2pAb7yFnroZSRdfhxHT5W88s+tinNkWN1/U04mIZM7bVGEM6h8Xr4ccX/OOnrRJwHPWDCHo1hqsB8PdmBCOShF1qkd1CM1odoZBNCcPdETRLZPL3KYUBwJYKdFZO4KlWL8stoc9QBxA/ckuKsxJ4mqg=
    SMTP_PASSWORD: AgC8YcYGtwBWToXutrPtO17dR+9e/m1Om/JVxX2I5NVJ6CmYiEPzYCp9m4/R57sYaOm5htwaN/PQ55+bgIglsjBeQnPrekeVpKwQVeggyJFurmWJJuWTSHTMPtgx7fK9wRjnWPCA0qXFM5VJ0+WA9E2a2gl18wasN26Wh0r95MplFCXhgZnXgon11MhX9Be11u47J3rhhZV9XJjIJ2gEwtbHMq/fkLExKxyJMseLXXfII5/fEJVWB1DMDP5dq+zCp8CDCHysPvDNmges0/TlYIsUDKzNrIPuQgkBKzUWSL1I8cjsbzgtl/446JTQ9KJ0IeG4jx/wM2IXdtH9NgAGxZNLdN1FcYJ7nXNf231Nk7PxraIJDuxBSPWEuzlGpVvRC4UVkuCedrcBAoJ/Cn1CymKen3TUpr7vHZlNcGlLatNu2XIiunYYM1BqS1fhRKTJxqgSF54AilGBraD6CwCqxlgYwqrL8qk4wXM6AsyYguXQ8OLKDoLE/wkiYKioDCCBWVzU6lcwoZu7V3O28QbsL46HA4u4uzW/dzqgGbNP4V8ygrux8qtgCYvz//T9LsgPboPMBdC1h18c8fmd2G9gnk5JKQhxnj5r0Q8bpjf4vc0BYCQREzzEyCEXUG0A5YBXaNpSah1toooBHHqu/Bxz838NOn58D53RMLCfBqXOUYq8ZEMrRyjdE03TxV4x+yJ9R9AuLQ2cIWdxu8mReWHjfHzOoWBlF+/w
    SMTP_USERNAME: AgA2v2WgypG3DpI+YpHKvko2agsl1Xo/QgoJyGAiI2ijk+cqLFZXnW4n/ULPugW7FOmi5XoOasHL2pyw3HUfF8U8zYSguplhE+HY2bHB8XEU9XtA/xtavKcJNMzWjgA5XveNhQ7fX41M1ET6L9TnZjz0qc/730K8SgB+XqrLl9xVraKDwyjGsYjc5RE6eFU8ma9gdXcJnE1XHf13wQhUYaCsVVAU3IfEiTjHGFu4eWiE8FZeXeARYPFhrHo6tDFfAtivySiiWr5WB91xlPCysHzuOoOYO0RxY+hhyXPUNnFO1pNLsk+jBBjyIV2fSFgmYK/ONTV930nyQn+8kgwtZ9rGdj9uKORAIUGOV7LZCzLpSgs6ZT5nIqAQOOEVOLzFQO13wTLhQC87Fiw0rtaFTnw8F19+0OKlqHaY8LkNUEVrO17vuppGuuo/3hRIslylLWiei0oG8AoxeuecdHvS5n8V8Opr9JnkFOuOqJqt5wPaYDeSfKUUO9NvXf7ZWZAXybWSg99YWx+6ycdfqNE5dxvk+j6b4RGjdtgZ/ssQTpUTcT0IfHLHAxvL4LnVtU7JUJCsW/SjeQXnhsMyxgd//77/FSM9NNgZIQB9sr+STxk1JzF6T2y8IqKN4DeV+bqxqfDP8nxZyS/KBrcd1wa2YpI+6PBo3Pnb+LE3CxZchEpaT1LJkQ4cs62rBhqHCbKVX40tK8QRPhxoCcF/+eA=
  template:
    metadata:
      labels:
        app: vaultwarden
      name: vaultwarden-secret-env
      namespace: tools
    type: Opaque

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: vaultwarden-env
  namespace: tools
  labels:
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: production
    app.kubernetes.io/part-of: vaultwarden
data:
  DATA_FOLDER: "data"
  DOMAIN: "https://bitwarden.theautomation.nl"
  DATABASE_MAX_CONNS: "10"
  IP_HEADER: "X-Real-IP"
  ENABLE_DB_WAL: "true"
  SIGNUPS_ALLOWED: "false"
  SIGNUPS_VERIFY: "false"
  ROCKET_PORT: "8080"
  SHOW_PASSWORD_HINT: "false"
  REQUIRE_DEVICE_EMAIL: "false"
  INVITATIONS_ALLOWED: "false"
  WEBSOCKET_ENABLED: "true"
  WEB_VAULT_ENABLED: "true"
  SENDS_ALLOWED: "true"
  ORG_CREATION_USERS: "all"
  DB_CONNECTION_RETRIES: "15"
  EMERGENCY_ACCESS_ALLOWED: "false"
  DISABLE_ADMIN_TOKEN: "false"
  SMTP_FROM_NAME: "Bitwarden | Theautomation"
  SMTP_SECURITY: "starttls"
  SMTP_TIMEOUT: "15"
  SMTP_PORT: "25"
  SMTP_HOST: "protonmail-bridge-smtp.tools.svc.cluster.local"

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: vaultwarden
  namespace: tools
  labels:
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: production
    app.kubernetes.io/part-of: vaultwarden
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vaultwarden
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: production
      app.kubernetes.io/part-of: vaultwarden
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vaultwarden
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: production
        app.kubernetes.io/part-of: vaultwarden
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: vaultwarden
          image: "vaultwarden/server:1.30.4-alpine"
          securityContext:
            runAsGroup: 1000
            runAsUser: 1000
          envFrom:
            - configMapRef:
                name: vaultwarden-env
                optional: false
            - secretRef:
                name: vaultwarden-secret-env
                optional: false
          ports:
            - containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
          volumeMounts:
            - name: vaultwarden
              mountPath: /data
          resources: {}
      volumes:
        - name: vaultwarden
          persistentVolumeClaim:
            claimName: pvc-iscsi-vaultwarden-data

---
kind: Service
apiVersion: v1
metadata:
  name: vaultwarden
  namespace: tools
  labels:
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: production
    app.kubernetes.io/part-of: vaultwarden
spec:
  selector:
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: production
    app.kubernetes.io/part-of: vaultwarden
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080

---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: vaultwarden
  namespace: tools
  labels:
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: production
    app.kubernetes.io/part-of: vaultwarden
  annotations:
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 250m
spec:
  ingressClassName: nginx-public
  rules:
    - host: "bitwarden.theautomation.nl"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: vaultwarden
                port:
                  name: http
  tls:
    - hosts:
        - bitwarden.theautomation.nl
      secretName: tls-wildcard-theautomation-nl
