---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nfs-jellyfin-media
  labels:
    app: jellyfin
spec:
  storageClassName: "freenas-nfs-manual-csi"
  capacity:
    storage: 5Ti
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - nfsvers=4
    - nolock
    - noatime
  csi:
    driver: org.democratic-csi.node-manual
    readOnly: false
    fsType: nfs
    volumeHandle: pv-nfs-jellyfin-media
    volumeAttributes:
      server: 10.10.30.43
      share: /mnt/home-lab/media
      node_attach_driver: nfs
      provisioner_driver: node-manual

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-nfs-jellyfin-music
  labels:
    app: jellyfin
spec:
  storageClassName: "freenas-nfs-manual-csi"
  capacity:
    storage: 1Ti
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - nfsvers=4
    - nolock
    - noatime
  csi:
    driver: org.democratic-csi.node-manual
    readOnly: false
    fsType: nfs
    volumeHandle: pv-nfs-jellyfin-music
    volumeAttributes:
      server: 10.10.30.43
      share: /mnt/home-lab/media/music
      node_attach_driver: nfs
      provisioner_driver: node-manual

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-iscsi-jellyfin-config
  labels:
    app: jellyfin
spec:
  storageClassName: "freenas-iscsi-manual-csi"
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  csi:
    driver: org.democratic-csi.node-manual
    readOnly: false
    fsType: xfs
    volumeHandle: pv-iscsi-jellyfin-config
    volumeAttributes:
      portal: 10.10.30.43:3260
      iqn: iqn.2005-10.org.freenas.ctl:jellyfin-config
      lun: "0"
      node_attach_driver: iscsi
      provisioner_driver: node-manual

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-iscsi-jellyfin-cache
  labels:
    app: jellyfin
spec:
  storageClassName: "freenas-iscsi-manual-csi"
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  csi:
    driver: org.democratic-csi.node-manual
    readOnly: false
    fsType: xfs
    volumeHandle: pv-iscsi-jellyfin-cache
    volumeAttributes:
      portal: 10.10.30.43:3260
      iqn: iqn.2005-10.org.freenas.ctl:jellyfin-cache
      lun: "0"
      node_attach_driver: iscsi
      provisioner_driver: node-manual

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-nfs-jellyfin-media
  labels:
    app: jellyfin
spec:
  storageClassName: freenas-nfs-manual-csi
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Ti
  volumeName: pv-nfs-jellyfin-media

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-nfs-jellyfin-music
  labels:
    app: jellyfin
spec:
  storageClassName: freenas-nfs-manual-csi
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Ti
  volumeName: pv-nfs-jellyfin-music

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-iscsi-jellyfin-config
  labels:
    app: jellyfin
spec:
  storageClassName: freenas-iscsi-manual-csi
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeName: pv-iscsi-jellyfin-config

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-iscsi-jellyfin-cache
  labels:
    app: jellyfin
spec:
  storageClassName: freenas-iscsi-manual-csi
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  volumeName: pv-iscsi-jellyfin-cache

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: jellyfin
  labels:
    app: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      runtimeClassName: nvidia
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - gpu-node-1
      securityContext:
        runAsUser: 1031
        runAsGroup: 100
        fsGroup: 100
      containers:
        - name: jellyfin
          image: "docker.io/jellyfin/jellyfin:latest"
          env:
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: "compute,utility,video"
            - name: NVIDIA_VISIBLE_DEVICES
              value: "all"
            - name: JELLYFIN_NETWORKING_KNOWNPROXIES
              value: "10.10.30.0/24,127.0.0.1"
            - name: JELLYFIN_NETWORKING_REQUIREHTTPS
              value: "false"
            - name: JELLYFIN_NETWORKING_ENABLEIPV4
              value: "true"
          ports:
            - name: http
              containerPort: 8096
              protocol: TCP
            - name: https
              containerPort: 8920
              protocol: TCP
            - name: svc-discovery
              containerPort: 1900
              protocol: UDP
            - name: cl-discovery
              containerPort: 7359
              protocol: UDP
          volumeMounts:
            - name: media
              mountPath: /media
            - name: music
              mountPath: /music/organized
              subPath: organized
            - name: config
              mountPath: /config
            - name: cache
              mountPath: /cache
            - name: dri
              mountPath: /dev/dri
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "5Gi"
              cpu: "3000m"
      restartPolicy: Always
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: pvc-nfs-jellyfin-media
        - name: music
          persistentVolumeClaim:
            claimName: pvc-nfs-jellyfin-music
        - name: config
          persistentVolumeClaim:
            claimName: pvc-iscsi-jellyfin-config
        - name: cache
          persistentVolumeClaim:
            claimName: pvc-iscsi-jellyfin-cache
        - name: dri
          hostPath:
            path: /dev/dri
            type: Directory

---
kind: Service
apiVersion: v1
metadata:
  name: jellyfin-service
  labels:
    app: jellyfin
spec:
  type: LoadBalancer
  loadBalancerIP: 10.10.30.11
  externalTrafficPolicy: Local
  selector:
    app: jellyfin
  sessionAffinity: None
  ports:
    - name: http
      protocol: TCP
      port: 8096
      targetPort: http
    - name: https
      protocol: TCP
      port: 8920
      targetPort: https
    - name: svc-discovery
      protocol: UDP
      port: 1900
      targetPort: svc-discovery
    - name: cl-discovery
      protocol: UDP
      port: 7359
      targetPort: cl-discovery

---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: jellyfin
  labels:
    app: jellyfin
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/proxy-body-size: "128m"
spec:
  tls:
  - hosts:
    - jellyfin.j3laserna.me
    secretName: wildcard-j3laserna-me-tls
  rules:
    - host: jellyfin.j3laserna.me
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jellyfin-service
                port:
                  name: http
  
