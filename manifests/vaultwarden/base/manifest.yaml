---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-iscsi-vaultwarden-db
  labels:
    app: vaultwarden
spec:
  storageClassName: "freenas-iscsi-manual-csi"
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  csi:
    driver: org.democratic-csi.node-manual
    readOnly: false
    fsType: xfs
    volumeHandle: pv-iscsi-vaultwarden-db
    volumeAttributes:
      portal: truenas-master.lan.theautomation.nl:3260
      iqn: iqn.2005-10.org.freenas.ctl:vaultwarden-db
      lun: "0"
      node_attach_driver: iscsi
      provisioner_driver: node-manual

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: vaultwarden-data-pv-nfs
  labels:
    app: vaultwarden
spec:
  storageClassName: "freenas-nfs-manual-csi"
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - nfsvers=4
    - nolock
    - noatime
  csi:
    driver: org.democratic-csi.node-manual
    readOnly: false
    fsType: nfs
    volumeHandle: vaultwarden-data-pv-nfs
    volumeAttributes:
      server: truenas-master.lan.theautomation.nl
      share: /mnt/ssd/containers/k8s/vaultwarden-data
      node_attach_driver: nfs
      provisioner_driver: node-manual

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: vaultwarden-data-pvc-nfs
  namespace: tools
  labels:
    app: vaultwarden
spec:
  storageClassName: freenas-nfs-manual-csi
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  volumeName: vaultwarden-data-pv-nfs

---
kind: SealedSecret
apiVersion: bitnami.com/v1alpha1
metadata:
  name: vaultwarden-server-env-secret
  namespace: tools
spec:
  encryptedData:
    ADMIN_TOKEN: AgAtxn0TaDUbolYPOK4sHidxyIN9bQzGvUeFXZhXV31McGF8BF/VNuVbQutvxjJ/aMlZr/Bi5E6NcATfJUL6XUWWGXUcrXvLBoFn8JteHud198Gj0P5HUs41uBl3VoIHFgTEN/ZGOzAaahbeIrKq+9CJL4crLpTz/zBoYi1tMsGfHUrt6/TqxbCc3mZNHti4tiHkLLU4Xqhd5Rhs2361XIvLjhHAZc3cneoUbfF/MgNw5wiHbAexNlz3QHGcTaPiZ1ACIP++foF2ixnupAoRaEpNzLjrfDVzuJslVH/3SBVcutdXaZdJkkMZwHeURX76ye8U923CU5Q2FipOEjp0DnfjMvJ2cKm1oS0F1pxin1zPTy3L8HU8Dj9ponzt+c4oCJOjttzU09nHuhnzH117Y4fbmGEzx2KbYEdBLcof7hAO/8tBT6EALpP7H/gSJ0yhn1deAdp4r8IdSJn/3ORm2EIEEgPP9XXwq9btotVdO95UZu7bZIXheB7mSOy/tnhxZuBdUyZmu187BNJLicvZRTPOsB0ivuUL0kCOmgkCCO8jt0Mdc7/SLlE/MAdTOpW+EHiFbvv8N8NWCON+oDsYO7tGAStwaZrlEtlV658FzzXGPpXwSwhIVj2nZWq1HQH1O48yxdafLBprzSNXHor7yxJ5RJo3SdWJ9d+MOaLdQi20dItGFCnFY6cy5n460dIAglsOpyZHYiohnKUQ6KB1CA==
    DATABASE_URL: AgCii3MXV50y9RQYAubedseLkk0qmrCNMy9pnC0+qq7T3TfG+lRbfNzxyHbzFXBS2luyFo1wORL35EBvyjPRoKp9VWxEJ8LdeyzidrE+wFUOrlu9wHFcgsic0X7k89suW77wV1434CRpTlrNsWGkUo0bnXi/iSTQJ50h0VNiyTPRcHz1FI5H/F3M0a8AS7U+AEsgl/AVICqbLnNB7uJjkEeHQ46oeFsm4HyHvfyOqfzRA7awLwWxHjMdHb2cP67qJSf+o7oehflfM16BAMqbeNHKVJrY0gDUxcmAHH07OqGitHfzAoiHrvOdESLB8TQW8sbBhVQNS666K5uaFwrWKB32CkEDX2pvOvRH7plyP5g4+RwdHyc0O01FGJBIDWSpICQ/XF16rbMzoPjAZzKQ/y9EDUuS76IoMYpmXYyoyumtHvxrBoOyaP8xAWpfw1IHzPP9gjHTmjMUTo5hRUub6E2vfrbo6UfKhs/Jd8G/VSraaVfSa/GTElZEPhh/GfHecqNtKCZIjAeOHGg+YJleU2ZIGldGBDVA1gwtB4OIIE3W/WXK+CPkSuAs2KflwzIhN2lWvvTcsc6Qdp5Cd8Mf76tbfpifcqxs9PihNAtEObZ1k+A2Wr33BVKUWb5T602pvxSeCObi8Hr/xrrn0WTzCYg8MvPTpAQfMge7mxAjl8pJ59qopRqYI2ZxBnbFkBjMt5RQX6v8aGASiL5W6EWYVXHtL9hk7FYndOn84+/1JX87CVgq+HZkhS5F2PlYIB5OOchRwpxQfnmPWgskFpH2hKxv1BlXtXlCE+I753NCHtp8tgf4AK86sSIaSlhBGe6D9x10t/uRWBfITWlZk6mnHhNRW+6vmhAHAJApXRKxQD6TrneJbA==
    SMTP_FROM: AgCLR+s9xsQTT47ShvRiIwQ1WHRmowJWWH7DSW9XyUeVOa/YYszLC0q8I8GH4ihcjBr35cBf+Gc+4SB+AmXviRnIMQJeOxymxK9MHbNOVtCEjYb7ST4+Qxfp+IW35ulXPUQyiYeVLjQAI584sFhkKmxkUh8YvznmpOZWMSirqCUsV/61DphphgYD9jPOfdDYI8suudiPVI9jAFAEoDZ8MyIH2kTHWhaaV5GqqLsYckv5MPMUTudCK6aVX6dyn+z20kt3f6fHG12RjGP0edGMjiQUU1WnjNXzgEGSxv+f//RgSS69TsdY7WQ+usZRIVFHx3ZCPQKcckPOTieqJrT9SWFCGEcfTgaSBeG4av4m9mcux5zKK7jSWKwxqVzm3R2dmQTH05NPOTMxUiuLccE49epf88kReDZFGnLnYaXeOhFNTcu+0K4XpRj7WbCNokfssVMy7m0ULKWvxeq/GE2D5yKXX4+agVXYTOI+mBNl57xK+lnGRe+j1OWyALcRPdwaGjy0caLTnUqPEYC1B6PEwGb7h+RS9Yjf1XLOzYHyE9i3AxphQ2ZBogzqJ2Ovnd3FSZJI2DdqhLySfo+8388fkaEivEIkq1nN9YWjLjeaf5yTBcSiIFHxWEuFbFhRZxuNqlejwujMkL/THFlNdy8b6078V0OjSmaHQ8HvVpNfO9vII0Up748sjPHYUQJQ+Hz8jwdNvlYCDew3c08HEQCTGNbW4jm5
    SMTP_PASSWORD: AgAEt4QlWTFnpIs9sd0VdbXpzOXMDRkj2s1JSBzmE0t6bJXOqPhpVqiXY7bNpCz6DMeRcaHfSd9uimxm0EkHI1b3aghbomMmyUfCuujBFnmO0vbQ+v2yOQAkz4C5Gikgs5ZRunOHWOba0jX3+PXZisITJajq3AAXgccXpyOyd9QSPYtI7Vs/Bb0lQEOHy5lRGW+91O35ZcfQ7++nSu6eB6qgWhr4X76Fcic2MZrMPnc2qWQg5uWftl8Ocp3sN+5tmgc8+wrWVTHr3kKEH9iR4NjrGVMkZw1kF2OyX1xTAp8tyIlCs351xDtDfLoxzKmpVc5QshlYLCGbL44lMsgxFPVIYqu8XWpCkKqSCKDJU2xzhNY8ItruuGEC5XfHiXGh821XCwy+c3KeAF5EaMtRzd6xoAKCSSXks5xWDzFP5wFk2Gm8BovF/Iz9zagif6cvcYkBWRS9RSnBnOqHpX6LSjFRJ6XJEHYQXi2ZEuaEMn2znA2nTHk7Ep/MZqZZnp9zx8DtfwBWKPqy1f7P3sl8mJb7MnKcPjIr4NhOa+fmyoWJNthgoLc/52DDAyhpu82xBPg2Zm+G1klkCHUSpAAXy2k7k4hcPhSTaL1ICAlao4190KVskOlogCK95UJK5WRwOlyHfFHKcxwjRcr+tnR5ig90bL6UmkFB2fu2mBY7icE/uK4VsJ0e2uVtdeojrrU8pwhpjqucHfrJxZbV49puuC3u/VJIxR2C
    SMTP_USERNAME: AgDBHruVABLm413v7QL2AkTTf/NQ30ucXFbRsiARCFQLF5h53bpWZG3KATaGwyAoe9UZU4ILku+W1xZn4Lja3tr17rNqg/koJB5RPnFtd7HTE905Pz0qaWKYA5YlKCQ8UO6mJ2c+qpaJPiLEeDL5Fye5mGiagkUzVChqQMwM08KUpDz2qnY1G0Zyiqm8+0bROpHtDOtWRK2zyEbDFKJnw9HUAkiJwZYwZkPrA0/sZVyShS1EraXsYblSRJZZQs/5aEsit4/sO5rhFcFR5Yc9BTsObuNcy1mLbqtlI5knd9jlGgm/0rsFaNY+CKwkUg2RiPeZ7JtzmOGhf9+5ze9kViHsrF8KIiUTElsiuzj6q4d3GJdtW+oV0LQSrl1pUpwYsaFq1u6oco3466LhDLDJ9oRpG9e3UQgXOY6ekfrVxVaGP6QTq4qfnUddDyct3aIWw5pFLlQrN3yPCZC42tPtY0Bau1AgDOmcUdv/HyNASJl8ibB0m3LC5w6nIyn+cpeX2IausN9Qik7gDKiu+NH+t5PMg7P08eDPzGK8xUblY1do+U7IUAcYXasl/iAWbFXlXGSOok0TDWQKEFFexIOeqWl++MDxubiA27EfvL30b+dWr4kYdcK2C954e7/kF76dzb7zn2HQ/ICbkIbntrkZwuZWMwqNAw2dNNPQW57WwqfB37rMMj6DQuyy/hsVEKLuUy2ZeIcYH8372JlMfZc=
  template:
    metadata:
      labels:
        app: vaultwarden
      name: vaultwarden-server-env-secret
      namespace: tools
    type: Opaque

---
kind: SealedSecret
apiVersion: bitnami.com/v1alpha1
metadata:
  name: vaultwarden-database-env-secret
  namespace: tools
spec:
  encryptedData:
    POSTGRESQL_PASSWORD: AgBTaUNFeQ3c6qidTTHGTVIgOfhkz37biKRTWLLGYMCsGc3tFsBEm8sQfqGrhGlrqLXpyQY9DlTd0uZKKOZIsxYXQ/mR7FzVfDSAzru3lSGpIwKzGbTEqw8AtQQjNbBB6rWeCfiPXjdKUEBH0znDdSK4UM70b06GY9MyOrTrahfePg3ExIB6mw8xo5C1FY4jNhEDv5SWL1zZsjrOWPAuN1hGic6UKxtvqbjsffnQ+t5J8SCu0QdszHLNux3G7I5nutkaDYIkv4LjvKZ/2qyMW98drP247HYdKv5FImYSKf2nzt/xspJ4r9ncv5rPLH3+ESEdMuxvYWorOAO+9gtmOIJS0i/JS26s6DpdPhbRFjpE/sP/hzNcC79Sxwsk+jX4/CgvbQidO64Pm/3p3dVKzb96BbUiRp/U8Akx48qEvrRYLJejynzNZ8mOi06J8cGclSh4ytAry7NOHVtEnUPssG39u302h0FC0F1dwJleHjCIDHizuCenswrFH+yCwmY0NJp08GLXPwXKUtaii4ZJWBE3AYCL67MvIvsK8Rl6zCdMjlYqXGP4a+ZEgQdagOP+fucjHxFd+03Hs1scAjCw8TsMgtV7MIEmbscwk1BL8Pv3NbSdX5cJmdu7vzO1lGuZoATHIIJ9BpmIDOf4VOwrpl91QRr1Y5zmavagYbr62GO8Ow1TKKgSDgr1cu35W+CNWTrVgl74kVe+FbZvnr+REOqTyY1eTNubz7wayRRuPYClkf5MPF+KXiI=
    POSTGRESQL_USERNAME: AgCdIEnH8wD64z36rm2X3D2uUclxVa0Ij+CUY8l+NrJFcZLMrJDmRaV4TT+swGUGH5iC/d6n/3z13hdgA2SX5f04SQF8HNYzq9fvW/2BvtWSp5wZVG5ECAldASpiPU2FROQ5ekVjY2bmRn4dBUcYxXmM8Q6zwgYNlFEujLPEcNDshv08+l9/ZTTrmcrkfw4EuawecP52ipwdFREphYIpRAa3MOLowaY89Fa3YhNEOZduHFG1gBKu3y6EnTLHcsh98/HYq4voYUHaB/5vB2wTfqI0ecdygfcEEh5xeHZrCxAwYEXFihVwj8VewFhJL7HdcQXvc4ho5UW0MFwVBdCvDlW/rcycousvzFIQxMnwRgVHV8jt1yTdpaVKDnDLRpXhqKNrfrdQfnjqiW+m321bfMwfAJ6i2xk5ASkZdIm7zRHY0TyikTuiAQSWb5lpx7MQQ4F7b0tmVL00PC3m68AgIo8tpEZr2rIZHzSQ0dzx96c+Q3HWtHSwKDIDkIwPxRD5Fku/czwtHNllLzxcoX7z3ytHBH2t3nVhAjCTDXamp8CamPgBijWzF0VsyI2ASWF/GOh3kQgysPAsytBH06akluFafAh7yZGFkQ1oBsHJXIRkvyqN8Az6uzv5QNFWe4+ms4cJFNXY+LEtDkkyJxHU/Civ6AHzQI8g1lD5yuBkVCnwLVP7loAWkAeXCy418m/Qg9DzlFjgxeTKb8hLUQ==
  template:
    type: Opaque
    metadata:
      name: vaultwarden-database-env-secret
      namespace: tools
      labels:
        app: vaultwarden

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: vaultwarden-database-env-configmap
  namespace: tools
  labels:
    app: vaultwarden
data:
  POSTGRESQL_DATABASE: "vaultwarden"

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: vaultwarden-server-env-configmap
  namespace: tools
  labels:
    app: vaultwarden
data:
  DATA_FOLDER: "data"
  DOMAIN: "https://bitwarden.theautomation.nl"
  DATABASE_MAX_CONNS: "10"
  IP_HEADER: "X-Real-IP"
  ENABLE_DB_WAL: "true"
  SIGNUPS_ALLOWED: "false"
  SIGNUPS_VERIFY: "false"
  ROCKET_PORT: "8080"
  SHOW_PASSWORD_HINT: "false"
  REQUIRE_DEVICE_EMAIL: "false"
  INVITATIONS_ALLOWED: "false"
  WEBSOCKET_ENABLED: "true"
  WEB_VAULT_ENABLED: "true"
  SENDS_ALLOWED: "true"
  ORG_CREATION_USERS: "all"
  DB_CONNECTION_RETRIES: "15"
  EMERGENCY_ACCESS_ALLOWED: "false"
  DISABLE_ADMIN_TOKEN: "false"
  SMTP_FROM_NAME: "Bitwarden | Theautomation"
  SMTP_SECURITY: "starttls"
  SMTP_TIMEOUT: "15"
  SMTP_PORT: "25"
  SMTP_HOST: "protonmail-bridge-smtp.tools.svc.cluster.local"

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vaultwarden-postgresql
  namespace: tools
  labels:
    app: vaultwarden
spec:
  replicas: 1
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
  serviceName: vaultwarden-postgresql-hl
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app: vaultwarden
  template:
    metadata:
      name: vaultwarden-postgresql
      labels:
        app: vaultwarden
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1000
      containers:
        - name: postgresql
          image: "docker.io/bitnami/postgresql:14"
          imagePullPolicy: Always
          securityContext:
            runAsUser: 1000
          envFrom:
            - configMapRef:
                name: vaultwarden-database-env-configmap
                optional: false
          env:
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vaultwarden-database-env-secret
                  key: POSTGRESQL_PASSWORD
            - name: POSTGRESQL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: vaultwarden-database-env-secret
                  key: POSTGRESQL_USERNAME
          ports:
            - containerPort: 5432
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "${POSTGRESQL_USERNAME}" -h 127.0.0.1 -p
                  5432
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "${POSTGRESQL_USERNAME}" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          resources:
            limits: {}
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        selector:
          matchLabels:
            app: vaultwarden
        accessModes:
          - "ReadWriteOnce"
        storageClassName: freenas-iscsi-manual-csi
        resources:
          requests:
            storage: "20Gi"

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: vaultwarden
  namespace: tools
  labels:
    app: vaultwarden
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vaultwarden
  template:
    metadata:
      labels:
        app: vaultwarden
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: vaultwarden
          image: "vaultwarden/server:1.32.0-alpine"
          imagePullPolicy: Always
          securityContext:
            runAsGroup: 1000
            runAsUser: 1000
          envFrom:
            - configMapRef:
                name: vaultwarden-server-env-configmap
                optional: false
            - secretRef:
                name: vaultwarden-server-env-secret
                optional: false
          ports:
            - containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
          volumeMounts:
            - name: vaultwarden
              mountPath: /data
          resources: {}
      volumes:
        - name: vaultwarden
          persistentVolumeClaim:
            claimName: vaultwarden-data-pvc-nfs

---
kind: Service
apiVersion: v1
metadata:
  name: vaultwarden-postgresql-hl
  namespace: tools
  labels:
    app: vaultwarden
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  selector:
    app: vaultwarden
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: 5432

---
kind: Service
apiVersion: v1
metadata:
  name: vaultwarden
  namespace: tools
  labels:
    app: vaultwarden
spec:
  selector:
    app: vaultwarden
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080

---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: vaultwarden
  namespace: tools
  labels:
    app: vaultwarden
  annotations:
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 250m
spec:
  ingressClassName: nginx-public
  rules:
    - host: "bitwarden.theautomation.nl"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: vaultwarden
                port:
                  name: http
  tls:
    - hosts:
        - bitwarden.theautomation.nl
      secretName: tls-wildcard-theautomation-nl
