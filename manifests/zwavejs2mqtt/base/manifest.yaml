---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-nfs-zwavejs2mqtt-us-data
  labels:
    app: zwavejs2mqtt-us
spec:
  storageClassName: "freenas-nfs-manual-csi"
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - nfsvers=4
    - nolock
    - noatime
  csi:
    driver: org.democratic-csi.node-manual
    readOnly: false
    fsType: nfs
    volumeHandle: pv-nfs-zwavejs2mqtt-us-data
    volumeAttributes:
      server: truenas-master.lan.theautomation.nl
      share: /mnt/ssd/containers/k8s/zwavejs2mqtt-data/us
      node_attach_driver: nfs
      provisioner_driver: node-manual

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-nfs-zwavejs2mqtt-us-data
  labels:
    app: zwavejs2mqtt-us
spec:
  storageClassName: freenas-nfs-manual-csi
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  volumeName: pv-nfs-zwavejs2mqtt-us-data

---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  labels:
    app: zwavejs2mqtt-us
  name: zwavejs2mqtt-us-settings
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
spec:
  encryptedData:
    S0_Legacy: AgB5VGYweLXpfZk4Njt+d3TXH/pSjycuj529gUieuGBAHx58Fwk6xU8HysyJGa38SYNr/+aY+XU/xVVeZ1Eyt1IPxqRgswkF9WcRMUIOq4BBc/lZg1IZerWmsQEJVbsGFTwwUar7tMtWUiaYTK4Pfjokhj8N136v2NtzB0ET8IUHgxTPRsvTAAMHbmDBjRyoU3486R453wIWrk4msl0qd/vQxJQpRTLBC8rJHjqauFyd3VF/YpylbK/VbQzFEZ+N1QqWTFmcCdf+sgswRSH+WAFoxcjwWwvwk8ZV88KxZV2RVUog1xg90imBNOHpGX/nYpfMy1wbyNENevDCtZgHx40aYW+LKMI9Htl2FjE2jR/NkQi1hTCAxdAIMr6ULDuVjq6uofg+wFLJ7JGrdT5c5d4Wqzi/+Y0AUdm1Hnkfk46s3apuSF3x2xafdQblEaXUAWlR1B5eW/TUONZQ5yIMoCFZsMq5tfJoIMl/Cy3W+VQSDbwNccmzYd2BhoanAseOllcxnGDAeNRl+yz1QP5Rl705JacxjCHUw146RCNz1QcO8GOUuG1PzrqjX8liPJTOK77F3reKlYxy4PB0apgQyEmBGeFptSbJdkaLbFTfUUBIriP2bj1FNiI7Mssfjmdj2ucM/4TRKtd+jhJrXcEuV3KUzZdjKiVWQ3E9RKDT3fZZTfInAL0hFRhiL7j56Jw2fl2W3MZiZFEHwXYKwVuZnemvJ68Y54U21VilnQ+lrib8DHgsC7haiLw1fVNzTA==
    S2_AccessControl: AgCobSQWiozGeNCWN15EfgOl+JD9QvZrQR/dGNuk9wHpcbnCNQfiNel7Bx+rdYZ5b65C7OhzAvNjbtH497MQwk8OeX9ed5vzy9edFlz6B5qbnyl5JUxJ3RhwOK7F+Kk/2qjMD6qCdbdIl6xuvlNNBdDNapSGdPLZr1EJIIGVQFej6NHWHzflWu8dKeIsGYlt2cjaREiNqCVSgP8aOe5RH6e9Qu0LxamJe9IbS6OUZnFqpVXb67YZxuI9sg6/5CGYjvWkm/MSIAIwEaRnlrudYwwkqsE4GPcG0EO8pkJCVooSZzWcG/12Agily7PDBOXuq6kQLAl/YHttiVAGXApdZMBnULsFy/yTEn8y3i4Gq6fkTFWGXJbghhU2tLDIMUz52n1enXN1KZYohcXXoXJHbSHfDaSdNfndtsoz64jP5HMe7Vhy0KAYC73HS5BJxYEZ5z6y1nfeAuTrP+gdyeGkisqniNBytcyjT+NMuuTsSoaxax0mmFC3xihwq5McDI8z1Um+VYPZjuaxS4BA0KsNhID/D8+eGTbPFQWCDaNZRtt1t7MYMXiXhFvDaRn5ZfmBkETJqkaIiwRhbW8ZekP5a97Fxkagd8VkW+iehqQPCBmrAt6PtoOJfc1K9n1K1O4qhRVzRjy7FpPmQVrNlgpYseTAYmmw2NPYkeNj0OhnGNp/Z/iayhPLmImuts9YqL2EJ0GkhIVhhgbaMjiRc8tk3wG7CkefjEUyTI/eLEoRBBXQa8oN8exV/+6EwQKwhg==
    S2_Authenticated: AgA3UFMQq8Rv8UwzhKwu5FopS6fu3qKZU9JmBWy00a7+WNO7OEblpny+ocvBB5yg5OxqOBHDzMnlvzPezrfgTmYGwzrhr5r0nDo/E84KmirJQs0DAdtNN07gzbnThTjywK7HVLQtEIH7eF+kXNYL8nttHql+w6OyePQjGH6K1ZbKkFbPQq/dL9E4gH9GhvWAA/DIcC1bGbFqz5J+etcWmCPyoNZFdy1FwGGFYMY7bRFZd51ULmxIyANAfME/dtncH19+DwJOfdC+FgBBobrnsxnSgEuYMKRazM/BWvTg/I8KYoVFj/P04mAOghr7aJTRoCDw915c19jmKXBgYxtb5c4iwvb7dnSB2R5JyQPEANSbTMCPOQtXjco/0J8X4UBa9WN6avO9plKdHo1nmWT8zN6tJUBASGaVdg29GOYsg4IiJGYg5fowt5sdy7nCfylpt13EU8zIMUPjmGGO5ho8DfK80+anTlZS2ypXwEjpxBebHsRo0BorBDcDClKMw1vyroULeDoCsjemIdMhFQjQnzECeuHKwgIq3+kArywCbKfq9Fmwo4Cj9WLsEsyboUj5tBMCzgarjg/oRRWhq0mKbM2gNNVHDoQaG7xKKPYeSBrN3tPs64zzRd1IwLh1+rfORWBZP9iaNPO1Q6aQ9Lm6Sj7RIIoUQaL/CJfokDjLpAIxfKtjGns0EBvxfYhXrlz1+WaMgOaa+wuB+djwlhxTrlbLA3I0jWNAJKggJWRqfFao4tbZ2/KABq3s1XiCQA==
    S2_Unauthenticated: AgDgoXcfP31XLe+7UJ36Rn2pE5ODBVayR0qIriUsmjQ5nJvy9pEPi2SknB6irueA6ejBkSnuN4R1wdqmGPyi6BgfIzHhdDjcePI/NCJMr6aYK+oT7PvmkUs/7cPZqDxDcSf37YoLAmTlRG5AiYm0J0JEiJhQSBqD6zJXKTBQslfvL2Fpj3gXM3jbtQBzUUcsXaf3UCHa63gdbITDMmqYum2h/ELeySzfe8LRdMt0zI2GOuMpAvo/rBYh1ZRQL6pSWGkdoxIFlU5DMQvsNz3Omq6CqIe043VgWuweQRpI7oWnOKZbah/9ihXWSx0PLb//C5ITCL9pm84oZF8IclQjf7uPdq31T/x53qNIf9ktIi3LWqjZZpE5yOXm6ksMMOSeyQ4BT++csxbbXVkVl5TDyzJmMXLgsNuWOR2lVFlrgQNzACGZzl0fBguVlK5A+MKqi50Py1WWWX4Pn+F09avoFsuI2ocKXRVBKbNy5Ty9KinoXBnt3/vZDno1kuGQyXh9Cl+39lVu63TcTl852nvNy69f73USB0IlytpqQBE94xVMVPtRaV/P/kLJfoI7wY8iQa1mRL30uDP5nVa4lge48ycNQ2siXoyftwLm8TCeVRuCFEqmUh7GOIiU1SRwcUniaPFwr9VaQugpFKvQ9xTd/M11OYDGf94s4hFyLHYCX69WfmFvAM6CpPFj3oDSfzzqmImFGHfr9WsSbuiB77axDYiiagFeYFlLq53HZMvU9n7YxYJmeAHEIMw1xVlB6g==
  template:
    data:
      settings.json: |-
        {
          "mqtt": {
            "name": "Zwavejs2Mqtt",
            "host": "localhost",
            "port": 1883,
            "qos": 1,
            "prefix": "zwave",
            "reconnectPeriod": 3000,
            "retain": true,
            "clean": true,
            "auth": false,
            "_ca": "",
            "ca": "",
            "_cert": "",
            "cert": "",
            "_key": "",
            "key": "",
            "disabled": true
          },
          "gateway": {
            "type": 0,
            "plugins": [],
            "authEnabled": false,
            "payloadType": 0,
            "nodeNames": true,
            "hassDiscovery": false,
            "discoveryPrefix": "homeassistant",
            "logEnabled": false,
            "logLevel": "debug",
            "logToFile": false,
            "values": []
          },
          "zwave": {
            "port": "/z-stick",
            "commandsTimeout": 30,
            "logLevel": "debug",
            "logEnabled": true,
            "securityKeys": {
              "S0_Legacy": "{{ index . "S0_Legacy" }}",
              "S2_Unauthenticated": "{{ index . "S2_Unauthenticated" }}",
              "S2_AccessControl": "{{ index . "S2_AccessControl" }}",
              "S2_Authenticated": "{{ index . "S2_Authenticated" }}"
            },
            "deviceConfigPriorityDir": "/usr/src/app/store/config",
            "logToFile": true,
            "serverEnabled": true,
            "serverServiceDiscoveryDisabled": false,
            "enableSoftReset": true,
            "enableStatistics": true,
            "serverPort": 3000,
            "maxNodeEventsQueueSize": 100,
            "disclaimerVersion": 1
          },
          "backup": {
            "storeBackup": false,
            "storeCron": "0 0 * * *",
            "storeKeep": 7,
            "nvmBackup": false,
            "nvmBackupOnEvent": false,
            "nvmCron": "0 0 * * *",
            "nvmKeep": 7
          }
        }
    metadata:
      labels:
        app: zwavejs2mqtt-us
      name: zwavejs2mqtt-us-settings

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: zwavejs2mqtt-us
  labels:
    app: zwavejs2mqtt-us
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: zwavejs2mqtt-us
  template:
    metadata:
      labels:
        app: zwavejs2mqtt-us
    spec:
      containers:
        - name: zwave-us
          image: "docker.io/zwavejs/zwavejs2mqtt:latest"
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 1000m
              memory: 400Mi
            limits:
              cpu: 1000m
              memory: 512Mi
          env:
            - name: TZ
              value: "Europe/Amsterdam"
            - name: PUID
              value: "1000"
            - name: PGID
              value: "2000"
          ports:
            - containerPort: 8091
              protocol: TCP
            - containerPort: 3000
              protocol: TCP
          livenessProbe:
            failureThreshold: 10
            httpGet:
              httpHeaders:
                - name: Accept
                  value: text/plain
              path: /health
              port: 8091
            initialDelaySeconds: 30
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /usr/src/app/store
              name: data
            - mountPath: /usr/src/app/store/settings.json
              name: settings
              readOnly: true
              subPath: settings.json
            - mountPath: /z-stick
              name: z-stick
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: pvc-nfs-zwavejs2mqtt-us-data
        - name: z-stick
          hostPath:
            path: /dev/serial/by-id/usb-0658_0200-if00
            type: CharDevice
        - name: settings
          secret:
            defaultMode: 420
            secretName: zwavejs2mqtt-us-settings

---
kind: Service
apiVersion: v1
metadata:
  name: zwavejs2mqtt-us
  labels:
    app: zwavejs2mqtt-us
spec:
  selector:
    app: zwavejs2mqtt-us
  ports:
    - name: http
      port: 80
      targetPort: 8091

---
kind: Service
apiVersion: v1
metadata:
  name: zwavejs2mqtt-us-ws
  labels:
    app: zwavejs2mqtt-us
spec:
  selector:
    app: zwavejs2mqtt-us
  ports:
    - name: ws
      port: 3000
      targetPort: 3000

---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: zwavejs2mqtt-us
  labels:
    app: zwavejs2mqtt-us
spec:
  ingressClassName: nginx-private
  rules:
    - host: zwave-us.lan.theautomation.nl
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: zwavejs2mqtt-us
                port:
                  number: 80
  tls:
    - hosts:
        - zwave-us.lan.theautomation.nl
      secretName: tls-wildcard-lan-theautomation-nl
