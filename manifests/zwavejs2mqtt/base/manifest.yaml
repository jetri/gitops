---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-nfs-zwavejs2mqtt-us-data
  labels:
    app: zwavejs2mqtt-us
spec:
  storageClassName: "freenas-nfs-manual-csi"
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - nfsvers=4
    - nolock
    - noatime
  csi:
    driver: org.democratic-csi.node-manual
    readOnly: false
    fsType: nfs
    volumeHandle: pv-nfs-zwavejs2mqtt-us-data
    volumeAttributes:
      server: truenas-master.lan.theautomation.nl
      share: /mnt/ssd/containers/k8s/zwavejs2mqtt-data/us
      node_attach_driver: nfs
      provisioner_driver: node-manual

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-nfs-zwavejs2mqtt-us-data
  labels:
    app: zwavejs2mqtt-us
spec:
  storageClassName: freenas-nfs-manual-csi
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  volumeName: pv-nfs-zwavejs2mqtt-us-data

---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  labels:
    app: zwavejs2mqtt-us
  name: zwavejs2mqtt-us-settings
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
spec:
  encryptedData:
    S0_Legacy: AgB10VqOHhDv24U5BcxAvwx4+D6u81eBms8VGGI5VmuuZgBMrVq85qu6NFkY3Sw7HrbYaEal/p1kuMJfNDi8qAcRm9j1YRioZNLSQZXA57yv5r+I3/AVua/ohmjA8K1WByzJaXCF3yKj5i/2JZCZTIIW99Cv8zKAWld6E1BHsdPyORv3kv6E4jWc5faRPAs8FwRYicSIqOfYpG5t1vpNdCMbPhkOhJPjUQRadycejHRGHJf1OJBjrmMVkE+h02B8tv45N7HZ1XB6SSLkJ2g64kQ/LP3ldXg4V0MAsISFHYOJuENbXImlUdjDBXqjB4p3pCjOOLCliWbYtWMu+Bg9sCmNW2qfUe8K7v8fUdwMlTfFCMzNmkWI6AaeYA1bOKaVME+F7uTgvH/jh0Mu5FOdls4Ssoivt3TJoqvPLg3Gib99tO9CeAmqUkT/jJignm/uqaXT6t70Vhpj81tKlfmpTcT7NufI/L9ZlVlw6X4TXodX2XarZHZFupq/DKWMnrT51C8ZTRMu76o4BtXUXZQXGTkG/pOE7tJFzBmgOKRvFcu2anbXU411U5amxrN4uOVQ8cZjU4ZHgwJazq0EJcMhF+8neSJHOt43xJU+2Vgyk3ja+8qswYspwIpKBka9H3TpYvMl9JtPMcPLg2TTuSo+ravEomay/RbqdOBxKJafos312QC87dXAuOTISlb/a2EZ5PSJPTiexmj8nEaWGkCppkd7QZUjrskXazhT306XUUz9Q0CGrLa6TLczbHLyYg==
    S2_AccessControl: AgAOuSTHAdZBczKlAHwf95UquFLnl3ZO2IWEFImnEeexL1IkM+LSbOjZnbwGHb2vTqEwYqiYnRZ2PQZFS391bkkhdpmQHlI7pM+mqanXMb6Bb3G9/p48Q+TmodHlgev3QgCBCxSH0e1Ho2mnFGLmz3TJDVJZrqcFEeb8Lagfo/GDKCe0lPvoQ2g9NisgRv9iiKca2pUpnpIvte3bYAVFqa7G8DV4OZr2uzak/jQT/VJUtHtssRJeJhE2Od1Nh4xutLK2f3mNgOETo0gWqyjqHUntyGVKOWYNW1gnvLnKMHtXCagQbhrauT6dnqK1GsO0Aivo83lzE9nJEvgyUmpHx/tmDdZ8yjTLAWs7IdC3fzn5NPXQT7yghfRjiwWEEGFF5HZIZUA2L0AoT98sJlyg8Hh7FPhM4KExYvjfBKWrHv1k1Id8bGq2TBjjRV5DOsobUXDjq5nFXJWUBZ4O+tHwbT/MG1oy4auLPiUAk3pjaecarkR0tMSe3iWF9AJexBIwsrY2uyjKZ4saWfa38DGOCmYVFTQzlAGxSVv9dy3YPyMuUy8DvmSGlmBcf/a5WRb197ANBCQMSo51l2mNC1zK24VbOrf0lpoauSE2Hf0gOBTsB3lLNXVra1yUu+Cuh5OYTBakKlcnVBEJV8b2Blr+WLwdFDDGYKL4a+CUd4oLx1TzlJePDiooou90e9jFN+/2nxW+Enbm9Y0ODlkjBCevMQ54wRLpZPnk/jcUoyfuAsDGKNsqrs5cUkG7BNLUzA==
    S2_Authenticated: AgBJEa9wmi8FrTErPL+/z2suYduJNCXcDhjjOwvXcF1Nl5y/JJEhNZI75g5Uo1fkLtjSSRxdfgWm7qOaNXYJi6TOIceNF3YRbXZwT5VF8xMb04bZAfjNzND2bwPH+cFvIWx1S6pw7c1jb+stu9aJ3Dilgl0Kyl1P5AR22a3bo2SL0zWfZY6uji0JhnquCgtlZs/kKombYNvAEUXDI2MqLK238i2mpurDKBrCILCwyuesaCMz+rxAkzMJ3Mlzn6od1+/KidoV3HwAlBsme8Vh55w0/URym0OK+D+QhfTyYIcr/fnRvYCKc3/wJREcnU6MVL9id9tpst2CRz5O7tn2+a8bgL5Mv4rDuc2QsgUkNDYcgeXaGmuNd9gik5ueIYHeDmeN3YCsbswIlNu6IY8Ys48a46DAfsqCXI2TUHFDASWP2P9qIuRjX5jtEXjRBtxafGjPiO2b8NVKSs+f9EehdB1i+yL05Oz23dArwEDrqtpSaStH+fPcADURXyAMqwqxxBCF2pJvFvB1we49K8xbkTEMY2ANXqDboS1RpGsv4cAlfw0oBaXd8jX44//vBeb0MUnFdJxqgWTSR9vHPVuoLMwqKgj5QFjOc3QSfZR1VLp3BrWeZTxQF4rr5PMFg5ACkhp31We8rFxV5C8+ITcZjoLL39lTIVfTS+H+Jg0jZf1YX2Gp4hkO56gadVcCFrcE19N3rs/3WLFGgynGbkuOb7B6oDXV+RasPlMrNOCaunmE+Z7M9jde70H40FsmQg==
    S2_Unauthenticated: AgAVmFhl6cIydPdB8KSAZZXp+KOCD4+qN+IpAIB23k4fgBgW6l6tjGUvpvLb/w2Wm6Iw9m8UVRknFDwm/f9yFyAI1HPzoqWeu3vfgqNnJBlpvQWQT5RvNpsG0juPPnDZAVgvkBN8aLgmzEtFKTyxphBFlYO1WyPFXhpFGw0aIkvkUIQkLZFXagGX0FHNnO0bTh2HuwoKQ7x+E935kScISv+jDT1lJuvD/k+14mSK+kwCebr2rXlsY1V6AImZf6PFjIJn+i9jVFaH1I6wlEIXHeOJEHphxyrAlNWr4qvxtbvmdmvJxpAWBZdqNPGpWMVY6qHD0nlo+xjAE3czCgzeRELzWLs7zI2u8ngd64/Y/NMXTszI0eBmjsUj+CNUxfoviqcHKztt17nNa2bci6L6q4bf9mdbzom6wdFMBYbs/6V5e69c6Ijnk9QBkH4ym72bKnvUJ8/Md8qmn0bX2mAKNRiNLYtOy040cghoEW4l7FwQW3CfKi+4zo/GVEjBT+ZFz1h/D6vI97NO+pN7yBa0Zfr4ZNJewOkTmJaAcyh5C9CNuctboDkUKyqhOu6X7wcnmRGzDLf9bVecNGSK+zJYrPxFbLkAnEefMF2JGDlcN1w2rDM9CoCBl5N0+fAJ5Uq2t8u14VRsqadRoYjDQkRRstxdhX0xJjRJlp5zXoV6uDN5QASxnctcyl5azKVPfU5o7jEECxNqtACFcwUTR/bo1e8kGvm8b0mwP8uQjQxPYCDa10BdPAW2CFtLhmyieQ==
  template:
    data:
      settings.json: |-
        {
          "mqtt": {
            "name": "Zwavejs2Mqtt",
            "host": "localhost",
            "port": 1883,
            "qos": 1,
            "prefix": "zwave",
            "reconnectPeriod": 3000,
            "retain": true,
            "clean": true,
            "auth": false,
            "_ca": "",
            "ca": "",
            "_cert": "",
            "cert": "",
            "_key": "",
            "key": "",
            "disabled": true
          },
          "gateway": {
            "type": 0,
            "plugins": [],
            "authEnabled": false,
            "payloadType": 0,
            "nodeNames": true,
            "hassDiscovery": false,
            "discoveryPrefix": "homeassistant",
            "logEnabled": false,
            "logLevel": "debug",
            "logToFile": false,
            "values": []
          },
          "zwave": {
            "port": "/z-stick",
            "commandsTimeout": 30,
            "logLevel": "debug",
            "logEnabled": true,
            "securityKeys": {
              "S0_Legacy": "{{ index . "S0_Legacy" }}",
              "S2_Unauthenticated": "{{ index . "S2_Unauthenticated" }}",
              "S2_AccessControl": "{{ index . "S2_AccessControl" }}",
              "S2_Authenticated": "{{ index . "S2_Authenticated" }}"
            },
            "deviceConfigPriorityDir": "/usr/src/app/store/config",
            "logToFile": true,
            "serverEnabled": true,
            "serverServiceDiscoveryDisabled": false,
            "enableSoftReset": true,
            "enableStatistics": true,
            "serverPort": 3000,
            "maxNodeEventsQueueSize": 100,
            "disclaimerVersion": 1
          },
          "backup": {
            "storeBackup": false,
            "storeCron": "0 0 * * *",
            "storeKeep": 7,
            "nvmBackup": false,
            "nvmBackupOnEvent": false,
            "nvmCron": "0 0 * * *",
            "nvmKeep": 7
          }
        }
    metadata:
      labels:
        app: zwavejs2mqtt-us
      name: zwavejs2mqtt-us-settings

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: zwavejs2mqtt-us
  labels:
    app: zwavejs2mqtt-us
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: zwavejs2mqtt-us
  template:
    metadata:
      labels:
        app: zwavejs2mqtt-us
    spec:
      containers:
        - name: zwave-us
          image: "docker.io/zwavejs/zwavejs2mqtt:latest"
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 1000m
              memory: 400Mi
            limits:
              cpu: 1000m
              memory: 512Mi
          env:
            - name: TZ
              value: "Europe/Amsterdam"
            - name: PUID
              value: "1000"
            - name: PGID
              value: "2000"
          ports:
            - containerPort: 8091
              protocol: TCP
            - containerPort: 3000
              protocol: TCP
          livenessProbe:
            failureThreshold: 10
            httpGet:
              httpHeaders:
                - name: Accept
                  value: text/plain
              path: /health
              port: 8091
            initialDelaySeconds: 30
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /usr/src/app/store
              name: data
            - mountPath: /usr/src/app/store/settings.json
              name: settings
              readOnly: true
              subPath: settings.json
            - mountPath: /z-stick
              name: z-stick
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: pvc-nfs-zwavejs2mqtt-us-data
        - name: z-stick
          hostPath:
            path: /dev/serial/by-id/usb-0658_0200-if00
            type: CharDevice
        - name: settings
          secret:
            defaultMode: 420
            secretName: zwavejs2mqtt-us-settings

---
kind: Service
apiVersion: v1
metadata:
  name: zwavejs2mqtt-us
  labels:
    app: zwavejs2mqtt-us
spec:
  selector:
    app: zwavejs2mqtt-us
  ports:
    - name: http
      port: 80
      targetPort: 8091

---
kind: Service
apiVersion: v1
metadata:
  name: zwavejs2mqtt-us-ws
  labels:
    app: zwavejs2mqtt-us
spec:
  selector:
    app: zwavejs2mqtt-us
  ports:
    - name: ws
      port: 3000
      targetPort: 3000

---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: zwavejs2mqtt-us
  labels:
    app: zwavejs2mqtt-us
spec:
  ingressClassName: nginx-private
  rules:
    - host: zwave-us.lan.theautomation.nl
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: zwavejs2mqtt-us
                port:
                  number: 80
  tls:
    - hosts:
        - zwave-us.lan.theautomation.nl
      secretName: tls-wildcard-lan-theautomation-nl
