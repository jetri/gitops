---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-nfs-zwavejs2mqtt-us-data
spec:
  storageClassName: "freenas-nfs-manual-csi"
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - nfsvers=4
    - nolock
    - noatime
  csi:
    driver: org.democratic-csi.node-manual
    readOnly: false
    fsType: nfs
    volumeHandle: pv-nfs-zwavejs2mqtt-us-data
    volumeAttributes:
      server: truenas-master.lan.theautomation.nl
      share: /mnt/ssd/containers/k8s/zwavejs2mqtt-data/us
      node_attach_driver: nfs
      provisioner_driver: node-manual

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-nfs-zwavejs2mqtt-us-data
  namespace: home-automation
spec:
  storageClassName: freenas-nfs-manual-csi
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  volumeName: pv-nfs-zwavejs2mqtt-us-data

---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: zwavejs2mqtt-us-settings
  namespace: home-automation
spec:
  encryptedData:
    S0_Legacy: AgBHVO2ZOh21oekAMnQsXBy6LRmCa//gsCanfSLc1prMX2K1qp8nk9VZdbkLXSNpPH+YoqABT2uRiMS0q9E977hf2PmlhiWI60UbSnnJHhf3fPJt193xlq1/pp4iVQvfqNK1rjzcSH9SjJV0mm2lF40Hh+VgYlUlI7YtvRVksdkf99TakUlLXnb/XYKG2rVSMh9Ysb3knoqUPGyc1jOl1AikAmMj6Z74y2hZK9TSZ6FaMaDjRWBpR6oRzTWXHmgFjzuuW/7Xl9TQwH/cOAOYL1cZ44uPjdP0QnS2I+1RtCcHkYctZ1j4/N0UTS2uCYxoD3HrzShfABMYT6KSh0onApbrSG943mq2e1VI0Ce+fnbH9EtKtgfXWtzwqJ0GOJOOUUxEYLoTmLgAR+rP43FTtM6/e+VuBWA4ELpWzmmyOrMt25N5MJNBkuq65TcYVhKRL9xr6BBSCMeokLzAK0ThPy0nGAkudGXpKbtdXr5U4r9md8vWzAST2s4TJHWYJxgpz38QAveYavIjdZQTS+B8ojUGmesKv0tsu19NfgLXuvNIPSiuhOQjcVA1+YjrInkcyLWUKiKDDRh8faIbYqnep3d2VXDkpzn7/UCeHSVVdq67ERIy6TYv1d0A38O6/RC3vQeUnrBP4pZY+xmez/pLNC3IMDu0P3TTjwXjcF97O6Cvm5ilt2rX3z6np69RfaR/eE+YIXBa3qNftHsclWCAhMkhOCMD4x9hyRrC6QdVcTi4wQ==
    S2_AccessControl: AgBZnusGCb6F2Tjvuamgh5az0oYlw8uo+CGsR80pkK0s18lsi9gSvxckd80ECI65v0HX+Iv7v0Ze0qIIlYi/fLu84cSPuon78dvMAstIHq1Bu1rUe1S7TChmmY7Q9ZueNgstbr08mXF7fnbygrsjBzH/R9FtbhJyJrK0rY+set3M81zr06CdYXR1X84ZTvNUS058iBxPpZBRjHW0g2IMQ6fX9TAYsxsG3ugN8besFyJAuCaGDXQEUWIa63zI9+kH4JCxsnTS4RP9sqiKnj3963sa7PxZg9ng/6eMM6gTCLLIfEdhNficSOMsRuAqJD4XFsqt62tAC6gNcfDwebOyBYrEX6k4TTap8lgMtVSH/Dz4mG1l+U396d6FIDFTjEjEPgTJk8yL2vNoO3IR+r87GyUNKh28AyWN3oYZgM+rjbijnZn2zLz5fXhBTrPe3kLwQSYOZT3GBiLDIpq22H6DrwScDgncyyGmAvefILESla7EtjbhqDeQbjJdDQeXAMw9AJd/KYIVt5UG4tnLYS2ZcvPeI9cUGrf+91tfYGszcRTUa0hFreDEckUixsUvtiMiqgUsVkjZH5iPbZ8iXC2+UtsGSBH62K1fCHvVl1emXNMS529RTk5lzcQM7qWI2CczhUnkLYID59EW0i81+DgdixW/mvxH40KeUoAti72Wv2pO9jPpLZCTEjJyQeget5oF+1UC9QEgnhwB64zWakaecj7Rk+sfITXn1KQ7EIN66c3IJw==
    S2_Authenticated: AgCFaxAk/nq3ep8KPeY8Xi7Flpjo4Ao9NUHP6PDe9GOylGTfoiRIZtMP+s5ZxHWkqbStPcYw8e1ZhI3/w8GTNnK01tC/1G9ev8vmPsN+1JVWc6WaQqX8QFXxM5qrwEDGosCjB40SrWSSmtIKTCfwOO8Qo1x+6PyyTFkF452mgDvewMyeResE/Tvz8GCuH3gptZGHohn+rpwG8slRDJbcpviNLx5xtx+Aochmvl7GEJrXQD0dFFEB7K+yT3hbM6W5QsZ9Z7Kx2MRPDRUyca5KpOgIF5YyrS/Eb6pIi/XJqztN8LVxPD2CxT5OECcUVKiOdmbXImK7+ux4wCTYANhNlrZvUeN6Gx/YXBx3d7uIcfAjJjhBRdT0w4jTaXO2f1YfYScKonWaVGhaQBw6PRSdo5/VinMVaXJ+nQLZTjg0bik9KjfqLExH4z7cpgT6E31nFGubJkFB2yyUR2Ltwj8WVf0ZPCZBAfcS1n/wkj2K2gdafEEZg1QAy+GnWLxdjLskoWBfq/tytZWPhR0iqqbthoxMY27rFBELmV30HBKhUHHMpkzC5W8QiwJUllC90dlvroSWhwNf+Zdj8uD2kIAvSxy/HOV0/YySoOsRtOrTEdV5mu/Rko3cjot+BM1Rkt5SXDqZorFeMVx5T6n0PLGCGJ/Q+ykW1PuaXL/dRfI4p5BM8bln+R6QRgxDZenrWxHkmMIcF+HPqjDXYl2S84ZlWHpfru9Y3DWoJIUMwkzvQ03VSA==
    S2_Unauthenticated: AgBkEFl0zn1bjdKDDNQYsIJLgqYo/Ht4Mkb/tuVg7SSBhyrLXIjZVqK/lyy6KNYtaG5ezVETJC+5jE9u90DfXwl7WtZmpZ/Y13uAUph1+AoVBzveX+SHeECuhLoEC0rYqmnervt1/dmVH1+YjXjPObLZPnXb0hnq3y7Hgc1BfcGF6pHeeNin/tvegXqKqjaAb6tjUGdXgPQoJttfGHFjt5u8Cv9wP+QycloaVND3PS0wAQUnCWLYNR7LE8jyyELOZ4vnmp0NapVBIxORzSZc3NFDmmJROFyJBNKywIT6trseORoK+BTLEQsXtSjPegovU99N+ozNZu+PgMk3EkaI2hswMkERBLKTEB/0GDR09m0QPn8M+ljC/04EUMl1dV8hLccZ1YrcGmD4gzx9+SyHuAHDue4oWPj47BCDpUm7DHVndJfNI853VCOf+n/9LE1GGjoYCpyBY+PXAcuDvEBcNNQyh2bd9ppl8pYP+hGc03urzr4pZY764T/jNjqMG4/v9wjV9LWiS2HqpVE5KokUh0P7W3Uf2IkON2mxjh7txVB5Z3YWThdEQyBMrd4RS1XoN1+/LbB+4vJKgv4m81MN+i1abYxSUGXQuSXCp3P+7LJf2VF92zgf4wNsLEfj10janbODr04BTivSTl9/qRTFOU4+hM+IIlMNBspcLGXdG25cj8eyUIF9b/OdBpIT7AT8gGr92avWDU9E1YwtkBva5QtE/fyNS8tyTjPv4MXpj5HGhw==
  template:
    metadata:
      labels:
        app: zwavejs2mqtt-us
      name: zwavejs2mqtt-us-settings
      namespace: home-automation
    data:
      settings.json: |-
        {
          "mqtt": {
            "name": "Zwavejs2Mqtt",
            "host": "localhost",
            "port": 1883,
            "qos": 1,
            "prefix": "zwave",
            "reconnectPeriod": 3000,
            "retain": true,
            "clean": true,
            "auth": false,
            "_ca": "",
            "ca": "",
            "_cert": "",
            "cert": "",
            "_key": "",
            "key": "",
            "disabled": true
          },
          "gateway": {
            "type": 0,
            "plugins": [],
            "authEnabled": false,
            "payloadType": 0,
            "nodeNames": true,
            "hassDiscovery": false,
            "discoveryPrefix": "homeassistant",
            "logEnabled": false,
            "logLevel": "debug",
            "logToFile": false,
            "values": []
          },
          "zwave": {
            "port": "tcp://odroid-02:3001",
            "commandsTimeout": 30,
            "logLevel": "debug",
            "logEnabled": true,
            "securityKeys": {
              "S0_Legacy": "{{ index . "S0_Legacy" }}",
              "S2_Unauthenticated": "{{ index . "S2_Unauthenticated" }}",
              "S2_AccessControl": "{{ index . "S2_AccessControl" }}",
              "S2_Authenticated": "{{ index . "S2_Authenticated" }}"
            },
            "deviceConfigPriorityDir": "/usr/src/app/store/config",
            "logToFile": true,
            "serverEnabled": true,
            "serverServiceDiscoveryDisabled": false,
            "enableSoftReset": true,
            "enableStatistics": true,
            "serverPort": 3000,
            "maxNodeEventsQueueSize": 100,
            "disclaimerVersion": 1
          },
          "backup": {
            "storeBackup": false,
            "storeCron": "0 0 * * *",
            "storeKeep": 7,
            "nvmBackup": false,
            "nvmBackupOnEvent": false,
            "nvmCron": "0 0 * * *",
            "nvmKeep": 7
          }
        }

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: zwavejs2mqtt-us
  namespace: home-automation
  labels:
    app: zwavejs2mqtt-us
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: zwavejs2mqtt-us
  template:
    metadata:
      labels:
        app: zwavejs2mqtt-us
    spec:
      containers:
        - name: zwave-us
          image: "docker.io/zwavejs/zwavejs2mqtt:latest"
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 1000m
              memory: 400Mi
            limits:
              cpu: 1000m
              memory: 512Mi
          env:
            - name: TZ
              value: "Europe/Amsterdam"
            - name: PUID
              value: "1000"
            - name: PGID
              value: "2000"
          ports:
            - containerPort: 8091
              protocol: TCP
            - containerPort: 3000
              protocol: TCP
          livenessProbe:
            failureThreshold: 10
            httpGet:
              httpHeaders:
                - name: Accept
                  value: text/plain
              path: /health
              port: 8091
            initialDelaySeconds: 30
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /usr/src/app/store
              name: data
            - mountPath: /usr/src/app/store/settings.json
              name: settings
              readOnly: true
              subPath: settings.json
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: pvc-nfs-zwavejs2mqtt-us-data
        - name: settings
          secret:
            defaultMode: 420
            secretName: zwavejs2mqtt-us-settings

---
kind: Service
apiVersion: v1
metadata:
  name: zwavejs2mqtt-us
  namespace: home-automation
  labels:
    app: zwavejs2mqtt-us
spec:
  selector:
    app: zwavejs2mqtt-us
  ports:
    - name: http
      port: 80
      targetPort: 8091

---
kind: Service
apiVersion: v1
metadata:
  name: zwavejs2mqtt-us-ws
  namespace: home-automation
  labels:
    app: zwavejs2mqtt-us
spec:
  selector:
    app: zwavejs2mqtt-us
  ports:
    - name: ws
      port: 3000
      targetPort: 3000

---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: zwavejs2mqtt-us
  namespace: home-automation
  labels:
    app: zwavejs2mqtt-us
spec:
  ingressClassName: nginx-private
  rules:
    - host: zwave-us.lan.theautomation.nl
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: zwavejs2mqtt-us
                port:
                  number: 80
  tls:
    - hosts:
        - zwave-us.lan.theautomation.nl
      secretName: tls-wildcard-lan-theautomation-nl
